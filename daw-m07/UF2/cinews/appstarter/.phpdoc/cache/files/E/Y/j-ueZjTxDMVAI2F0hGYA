1706392378
waR3U4bTeM%3A4f7c16555cd2eab7f143f2656085766a-2e163883296b834613222bf8bb9df83d
s:5692:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDU6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIENvZGVJZ25pdGVyIDQgZnJhbWV3b3JrLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxNzI6IihjKSBDb2RlSWduaXRlciBGb3VuZGF0aW9uIDxhZG1pbkBjb2RlaWduaXRlci5jb20+CgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2Ugdmlldwp0aGUgTElDRU5TRSBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjJlMTYzODgzMjk2YjgzNDYxMzIyMmJmOGJiOWRmODNkIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTA6IkltYWdlcy5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo1OToidmVuZG9yL2NvZGVpZ25pdGVyNC9mcmFtZXdvcmsvc3lzdGVtL0xhbmd1YWdlL2VuL0ltYWdlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjIzMDA6Ijw/cGhwCgovKioKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgQ29kZUlnbml0ZXIgNCBmcmFtZXdvcmsuCiAqCiAqIChjKSBDb2RlSWduaXRlciBGb3VuZGF0aW9uIDxhZG1pbkBjb2RlaWduaXRlci5jb20+CiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3CiAqIHRoZSBMSUNFTlNFIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCi8vIEltYWdlcyBsYW5ndWFnZSBzZXR0aW5ncwpyZXR1cm4gWwogICAgJ3NvdXJjZUltYWdlUmVxdWlyZWQnICAgID0+ICdZb3UgbXVzdCBzcGVjaWZ5IGEgc291cmNlIGltYWdlIGluIHlvdXIgcHJlZmVyZW5jZXMuJywKICAgICdnZFJlcXVpcmVkJyAgICAgICAgICAgICA9PiAnVGhlIEdEIGltYWdlIGxpYnJhcnkgaXMgcmVxdWlyZWQgdG8gdXNlIHRoaXMgZmVhdHVyZS4nLAogICAgJ2dkUmVxdWlyZWRGb3JQcm9wcycgICAgID0+ICdZb3VyIHNlcnZlciBtdXN0IHN1cHBvcnQgdGhlIEdEIGltYWdlIGxpYnJhcnkgaW4gb3JkZXIgdG8gZGV0ZXJtaW5lIHRoZSBpbWFnZSBwcm9wZXJ0aWVzLicsCiAgICAnZ2lmTm90U3VwcG9ydGVkJyAgICAgICAgPT4gJ0dJRiBpbWFnZXMgYXJlIG9mdGVuIG5vdCBzdXBwb3J0ZWQgZHVlIHRvIGxpY2Vuc2luZyByZXN0cmljdGlvbnMuIFlvdSBtYXkgaGF2ZSB0byB1c2UgSlBHIG9yIFBORyBpbWFnZXMgaW5zdGVhZC4nLAogICAgJ2pwZ05vdFN1cHBvcnRlZCcgICAgICAgID0+ICdKUEcgaW1hZ2VzIGFyZSBub3Qgc3VwcG9ydGVkLicsCiAgICAncG5nTm90U3VwcG9ydGVkJyAgICAgICAgPT4gJ1BORyBpbWFnZXMgYXJlIG5vdCBzdXBwb3J0ZWQuJywKICAgICd3ZWJwTm90U3VwcG9ydGVkJyAgICAgICA9PiAnV0VCUCBpbWFnZXMgYXJlIG5vdCBzdXBwb3J0ZWQuJywKICAgICdmaWxlTm90U3VwcG9ydGVkJyAgICAgICA9PiAnVGhlIHN1cHBsaWVkIGZpbGUgaXMgbm90IGEgc3VwcG9ydGVkIGltYWdlIHR5cGUuJywKICAgICd1bnN1cHBvcnRlZEltYWdlQ3JlYXRlJyA9PiAnWW91ciBzZXJ2ZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgR0QgZnVuY3Rpb24gcmVxdWlyZWQgdG8gcHJvY2VzcyB0aGlzIHR5cGUgb2YgaW1hZ2UuJywKICAgICdqcGdPclBuZ1JlcXVpcmVkJyAgICAgICA9PiAnVGhlIGltYWdlIHJlc2l6ZSBwcm90b2NvbCBzcGVjaWZpZWQgaW4geW91ciBwcmVmZXJlbmNlcyBvbmx5IHdvcmtzIHdpdGggSlBFRyBvciBQTkcgaW1hZ2UgdHlwZXMuJywKICAgICdyb3RhdGVVbnN1cHBvcnRlZCcgICAgICA9PiAnSW1hZ2Ugcm90YXRpb24gZG9lcyBub3QgYXBwZWFyIHRvIGJlIHN1cHBvcnRlZCBieSB5b3VyIHNlcnZlci4nLAogICAgJ2xpYlBhdGhJbnZhbGlkJyAgICAgICAgID0+ICdUaGUgcGF0aCB0byB5b3VyIGltYWdlIGxpYnJhcnkgaXMgbm90IGNvcnJlY3QuIFBsZWFzZSBzZXQgdGhlIGNvcnJlY3QgcGF0aCBpbiB5b3VyIGltYWdlIHByZWZlcmVuY2VzLiAiezB9IicsCiAgICAnaW1hZ2VQcm9jZXNzRmFpbGVkJyAgICAgPT4gJ0ltYWdlIHByb2Nlc3NpbmcgZmFpbGVkLiBQbGVhc2UgdmVyaWZ5IHRoYXQgeW91ciBzZXJ2ZXIgc3VwcG9ydHMgdGhlIGNob3NlbiBwcm90b2NvbCBhbmQgdGhhdCB0aGUgcGF0aCB0byB5b3VyIGltYWdlIGxpYnJhcnkgaXMgY29ycmVjdC4nLAogICAgJ3JvdGF0aW9uQW5nbGVSZXF1aXJlZCcgID0+ICdBbiBhbmdsZSBvZiByb3RhdGlvbiBpcyByZXF1aXJlZCB0byByb3RhdGUgdGhlIGltYWdlLicsCiAgICAnaW52YWxpZFBhdGgnICAgICAgICAgICAgPT4gJ1RoZSBwYXRoIHRvIHRoZSBpbWFnZSBpcyBub3QgY29ycmVjdC4nLAogICAgJ2NvcHlGYWlsZWQnICAgICAgICAgICAgID0+ICdUaGUgaW1hZ2UgY29weSByb3V0aW5lIGZhaWxlZC4nLAogICAgJ21pc3NpbmdGb250JyAgICAgICAgICAgID0+ICdVbmFibGUgdG8gZmluZCBhIGZvbnQgdG8gdXNlLicsCiAgICAnc2F2ZUZhaWxlZCcgICAgICAgICAgICAgPT4gJ1VuYWJsZSB0byBzYXZlIHRoZSBpbWFnZS4gUGxlYXNlIG1ha2Ugc3VyZSB0aGUgaW1hZ2UgYW5kIGZpbGUgZGlyZWN0b3J5IGFyZSB3cml0YWJsZS4nLAogICAgJ2ludmFsaWREaXJlY3Rpb24nICAgICAgID0+ICdGbGlwIGRpcmVjdGlvbiBjYW4gYmUgb25seSAidmVydGljYWwiIG9yICJob3Jpem9udGFsIi4gR2l2ZW46ICJ7MH0iJywKICAgICdleGlmTm90U3VwcG9ydGVkJyAgICAgICA9PiAnUmVhZGluZyBFWElGIGRhdGEgaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIFBIUCBpbnN0YWxsYXRpb24uJywKXTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";